language: node_js
node_js:
  - '8'
dist: trusty
sudo: false
cache:
  directories:
    - node_modules
addons:
  chrome: stable
before_script:
  - npm install -g firebase-tools
script:
  - npm run build
before_deploy:
  - echo "TRAVIS_BRANCH=$TRAVIS_BRANCH"
  - export REACT_APP_BRANCH=$(if [ "$TRAVIS_BRANCH" == "master" ]; then echo "PRODUCTION"; else echo "STAGING"; fi)
  - echo "REACT_APP_BRANCH=$REACT_APP_BRANCH"
  - export FIREBASE_TOKEN=$(if [ "$TRAVIS_BRANCH" == "master" ]; then echo "$FIREBASE_PRODUCTION_TOKEN"; else echo "$FIREBASE_PRODUCTION_TOKEN"; fi)
  - echo "FIREBASE TOKEN = $FIREBASE_TOKEN"
deploy:
  - provider: script
    script: firebase use default --token $FIREBASE_STAGING_TOKEN && firebase deploy --token $FIREBASE_STAGING_TOKEN --only hosting
    skip_cleanup: true
    on:
      branch: dev
  - provider: script
    script:
      - firebase deploy --token $FIREBASE_PRODUCTION_TOKEN --only hosting:prod
    skip_cleanup: true
    on:
      branch: master
after_deploy:
  - echo "REACT_APP_BRANCH=$REACT_APP_BRANCH"
# Deployment notes

# There is a native firebase deploy provider for travis, however it does not have
# required customisation for things like deploying only hosting. Alternatively there
# is a npm package 'firebase-ci' which could be used

# Firebase requires auth, so can either pass --token to all commands with ci token,
# or store $FIREBASE_TOKEN environment variable which will automatically be detected
